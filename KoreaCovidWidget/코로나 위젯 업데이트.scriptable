{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "light-brown",
    "glyph" : "magic"
  },
  "name" : "코로나 위젯 업데이트",
  "script" : "\/\/ 경고창\nlet alert = new Alert()\nalert.title = '코로나 위젯 업데이트'\nalert.message = '업데이트 전 기존 스크립트의 이름이 \"코로나 위젯\"으로 되어있는지 확인해 주십시오.' + '\\n이름이 올바르지 않으면 새로운 스크립트를 설치합니다.'\nalert.addAction('계속')\nalert.addCancelAction('취소')\nlet result = await alert.present()\n\n\/\/ 진행\nif(result == 0) update()\nelse console.log('업데이트 취소')\n\n\n\/\/ Functions ======================================================\nasync function update() {\n  console.log('업데이트를 시작합니다.')\n  \n  \/\/ file link\n  const url = 'https:\/\/raw.githubusercontent.com\/sunung007\/IosScriptable\/main\/KoreaCovidWidget\/test\/add_Calendar.js'\n  \n  console.log('파일 로드 중...')\n  \n  \/\/ 새로운 스크립트 파일\n  let newFile = await new Request(url).loadString()\n  \n  \/\/ 새로운 파일의 버전\n  let vstart = newFile.indexOf('covid-widget-v')\n  let vend = newFile.indexOf(\"'\", vstart)\n  let newVersion = newFile.substring(vstart, vend)\n  console.log('새로 로드한 파일의 버전 : ' + newVersion)\n  \n  \/\/ 바꿀 기준점\n  let newIndex = newFile.indexOf('\/\/ Do not change from this line.')\n  \/\/ 바꿀 새로운 스크립트 부분\n  let newScript = newFile.substring(newIndex)\n  \n  \/\/ ------------------------------------------------------------\n  \n  \/\/ 예전 스크립트\n  let fileManager = FileManager.iCloud()\n  let directory = fileManager.documentsDirectory()\n  let path = fileManager.joinPath(directory, '코로나 구버전 시험.js')\n  \n  let tempScript\n  \n  \/\/ 파일 확인\n  if(!fileManager.isFileStoredIniCloud(path)) {\n    console.log('기존에 저장된 스크립트가 없습니다. 새로운 스크립트를 로드합니다.')\n    tempScript = newFile\n    return\n  } else {\n    \/\/ 바꿀 예전 스크립트 파일\n    let oldFile = fileManager.readString(path)\n    \n    \/\/ 예전 파일의 버전\n    vstart = oldFile.indexOf('covid-widget-v')\n    vend = oldFile.indexOf(\"'\", vstart)\n    let oldVersion = vstart<0 ? \n        null : oldFile.substring(vstart, vend)\n    console.log('현재 버전 : ' + oldVersion)\n    \n    \/\/ 바꾸면 안되는 부분(단축어)\n    let oldIndex = oldFile.indexOf(\n                           '\/\/ Do not change from this line.')\n    let oldScript = oldFile.substring(0, oldIndex)\n    \n    \/\/ ---------------------------------------------------------\n    \n    if(newVersion == oldVersion) {\n      console.log('새로운 업데이트가 없습니다. 업데이트를 종료합니다.')\n      return\n    } else {\n      \/\/ 새로운 스크립트\n      tempScript = oldScript + newScript\n    }\n  }\n\n  \/\/ 파일 작성\n  try {\n    fileManager.writeString(path, tempScript)\n    console.log('성공적으로 업데이트가 종료했습니다.')\n  } catch {\n    console.log('업데이트에 실패했습니다.')\n  }\n}",
  "share_sheet_inputs" : [

  ]
}